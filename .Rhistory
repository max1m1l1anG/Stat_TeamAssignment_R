lowbound_profit <- mean_profit - z_alpha2 * sd_profit / nrow(sample)^0.5
highbound_profit <- mean_profit + z_alpha2 * sd_profit / nrow(sample)^0.5
lowbound_COMP <- mean_COMP - z_alpha2 * ssd_COMP / nrow(sample)^0.5
highbound_COMP <- mean_COMP + z_alpha2 * ssd_COMP / nrow(sample)^0.5
H0_profit <- ifelse(highbound_profit < 0, "Do not reject H0", "Reject H0")
H0_COMP <- ifelse(lowbound_COMP > 6, "Do not reject H0", "Reject H0")
cat("The lower bound of the CI for profit is", round(lowbound_profit, 4), "and the higher bound is", round(highbound_profit, 4), "\nThe lower bound of the CI for competitors is", round(lowbound_COMP, 4), "and the higher bound is", round(highbound_COMP, 4))
cat("\n\nPROFIT:\n", H0_profit, "\n\nCOMPETITORS:\n", H0_COMP)
mean_DCOSTS <- mean(sample$DCOSTS)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
cat(pval_DCOSTS)
cat(mean_DCOSTS)
cat(pval_DCOSTS)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
print(pval_DNEWHIRES)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES)
print(mean_DNEWHIRES)
View(sample)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS < alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse(pval_DNEWHIRES < alpha, "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES,)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS < alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse(pval_DNEWHIRES < alpha, "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES)
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in 1:4){
q6$prop[i] <- sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])) / nrow(sample)
}
round(q6,4)
library(readxl)
library(dplyr)
library(tidyverse)
sample <- read_excel("Sample3.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "skip"))
alpha = 0.07
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
cat(paste("The median is", round(median_EMP, 4),
"\nThe mean is", round(mean_EMP, 4),
"\nThe sample variance is", round(svar_EMP, 4),
"\nThe (manual) sample variance is", round(manual_svar, 4),
"\nThe sample standard deviation is", round(ssd_EMP, 4),
"\nThe (manual) sample standard deviation is", round(manual_svar^0.5,4)))
median_growth <- median(sample$GROWTH)
mode <- function(x){which.max(tabulate(x))}
mode_growth <- mode(sample$GROWTH)
cat(paste("The median is", median_growth, "\nThe mode is", mode_growth))
relfreq_SECTOR <- table(sample$SECTOR) / length(sample$SECTOR)
index_relfreq <- 1
for (type in c("Technology", "Finance", "Healthcare", "Other")) {
print(paste("The relative frequency of", type, "is", round(relfreq_SECTOR[index_relfreq], 4)))
index_relfreq <- index_relfreq +1
}
mean_COMP <- mean(sample$COMPETITORS)
ssd_COMP <- mean(sample$COMPETITORS)
prop_less5 <- sum(sample$COMPETITORS < 5) / length(sample$COMPETITORS)
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COMP, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in 1:4){
q6$prop[i] <- sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])) / nrow(sample)
}
round(q6,4)
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat("The lowest z-score is", lowest_z,
"\nThe highest z-score is", highest_z,
"\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ",
"\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value.")
iqr_profit <- IQR(sample$PROFIT)
Q1_profit <- quantile(sample$PROFIT, 0.25)
Q3_profit <- quantile(sample$PROFIT, .75)
number_outliers_profit <- sum(sample$PROFIT < Q1_profit-1.5*iqr_profit) + sum(sample$PROFIT > Q3_profit+1.5*iqr_profit)
cat("The number of outliers is", number_outliers_profit)
z_alpha2 <- qnorm(1 - alpha/ 2)
lowbound_profit <- mean_profit - z_alpha2 * sd_profit / nrow(sample)^0.5
highbound_profit <- mean_profit + z_alpha2 * sd_profit / nrow(sample)^0.5
lowbound_COMP <- mean_COMP - z_alpha2 * ssd_COMP / nrow(sample)^0.5
highbound_COMP <- mean_COMP + z_alpha2 * ssd_COMP / nrow(sample)^0.5
H0_profit <- ifelse(highbound_profit < 0, "Do not reject H0", "Reject H0")
H0_COMP <- ifelse(lowbound_COMP > 6, "Do not reject H0", "Reject H0")
cat("The lower bound of the CI for profit is", round(lowbound_profit, 4), "and the higher bound is", round(highbound_profit, 4), "\nThe lower bound of the CI for competitors is", round(lowbound_COMP, 4), "and the higher bound is", round(highbound_COMP, 4))
cat("\n\nPROFIT:\n", H0_profit, "\n\nCOMPETITORS:\n", H0_COMP)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
lowpval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS < alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES < alpha / 2) | (pval_DNEWHIRES ), "Do not reject H0", "Reject H0")
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
lowpval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS < alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES < alpha / 2), "Do not reject H0", "Reject H0")
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS < alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES < alpha / 2), "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020)",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES)
mean_DNEWHIRES
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS < alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES > alpha / 2), "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020)",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS < alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES > alpha / 2), "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020)",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES)
library(tidyverse)
library(readxl)
library(dplyr)
sample <- read_excel("Sample3.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "skip"))
alpha = 0.07
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
lowerz_AGE <- qnorm(alpha, mean_AGE, sd_AGE)
print(lowerz_AGE)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
lowerz_AGE <- qnorm(1-alpha, mean_AGE, sd_AGE)
print(lowerz_AGE)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
lowerz_AGE <- qnorm(alpha)
print(lowerz_AGE)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
lowerz_AGE <- qnorm(1-alpha)
print(lowerz_AGE)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
lowerz_AGE <- qnorm(1-0.05)
print(lowerz_AGE)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
lowerz_AGE <- qnorm(1-alpha)
print(lowerz_AGE)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_age - 11)/(sd_AGE / nrow(sample)^0.5)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
cat("Te critical value is", z_AGE,
"\nThe rejection region is to the right side of the critical value.
\nTHe value of the test statistic is", TestStat_AGE)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
cat("Te critical value is", z_AGE,
"\nThe rejection region is to the right side of the critical value.
THe value of the test statistic is", TestStat_AGE)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
cat("Te critical value is", z_AGE,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_AGE)
mean_AGE
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
H0_AGE <- H0_DCOSTS <- ifelse(z_age > TestStat_AGE, "Do not reject H0", "Reject H0")
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
H0_AGE <- H0_DCOSTS <- ifelse(z_AGE > TestStat_AGE, "Do not reject H0", "Reject H0")
cat("The critical value is", z_AGE,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_AGE,
)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
H0_AGE <- H0_DCOSTS <- ifelse(z_AGE > TestStat_AGE, "Do not reject H0", "Reject H0")
cat("The critical value is", z_AGE,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_AGE,
"\nThe statistical conclusion is:", H0_AGE)
qnorm(alpha)
qnorm(1-alpha)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
H0_AGE <- ifelse(z_AGE > TestStat_AGE, "Do not reject H0", "Reject H0")
cat("Age:",
"The critical value is", z_AGE,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_AGE,
"\nThe statistical conclusion is:", H0_AGE,
"\n")
z_EMP <- qnorm(alpha)
TestStat_EMP <- (mean_EMP - 11)/(ssd_EMP / nrow(sample)^0.5)
H0_EMP <- ifelse(z_EMP < TestStat_EMP, "Do not reject H0", "Reject H0")
cat("Employment:",
"\nThe critical value is", z_EMP,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_EMP,
"\nThe statistical conclusion is:", H0_EMP)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
H0_AGE <- ifelse(z_AGE > TestStat_AGE, "Do not reject H0", "Reject H0")
cat("Age:",
"The critical value is", z_AGE,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_AGE,
"\nThe statistical conclusion is:", H0_AGE,
"\n\n")
z_EMP <- qnorm(alpha)
TestStat_EMP <- (mean_EMP - 11)/(ssd_EMP / nrow(sample)^0.5)
H0_EMP <- ifelse(z_EMP < TestStat_EMP, "Do not reject H0", "Reject H0")
cat("Employment:",
"\nThe critical value is", z_EMP,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_EMP,
"\nThe statistical conclusion is:", H0_EMP)
library(tidyverse)
library(readxl)
library(dplyr)
sample <- read_excel("Sample3.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "skip"))
alpha = 0.07
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
cat(paste("The median is", round(median_EMP, 4),
"\nThe mean is", round(mean_EMP, 4),
"\nThe sample variance is", round(svar_EMP, 4),
"\nThe (manual) sample variance is", round(manual_svar, 4),
"\nThe sample standard deviation is", round(ssd_EMP, 4),
"\nThe (manual) sample standard deviation is", round(manual_svar^0.5,4)))
median_growth <- median(sample$GROWTH)
mode <- function(x){which.max(tabulate(x))}
mode_growth <- mode(sample$GROWTH)
cat(paste("The median is", median_growth, "\nThe mode is", mode_growth))
relfreq_SECTOR <- table(sample$SECTOR) / length(sample$SECTOR)
index_relfreq <- 1
for (type in c("Technology", "Finance", "Healthcare", "Other")) {
print(paste("The relative frequency of", type, "is", round(relfreq_SECTOR[index_relfreq], 4)))
index_relfreq <- index_relfreq +1
}
mean_COMP <- mean(sample$COMPETITORS)
ssd_COMP <- mean(sample$COMPETITORS)
prop_less5 <- sum(sample$COMPETITORS < 5) / length(sample$COMPETITORS)
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COMP, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in 1:4){
q6$prop[i] <- sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])) / nrow(sample)
}
round(q6,4)
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat("The lowest z-score is", lowest_z,
"\nThe highest z-score is", highest_z,
"\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ",
"\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value.")
iqr_profit <- IQR(sample$PROFIT)
Q1_profit <- quantile(sample$PROFIT, 0.25)
Q3_profit <- quantile(sample$PROFIT, .75)
number_outliers_profit <- sum(sample$PROFIT < Q1_profit-1.5*iqr_profit) + sum(sample$PROFIT > Q3_profit+1.5*iqr_profit)
cat("The number of outliers is", number_outliers_profit)
z_alpha2 <- qnorm(1 - alpha/ 2)
lowbound_profit <- mean_profit - z_alpha2 * sd_profit / nrow(sample)^0.5
highbound_profit <- mean_profit + z_alpha2 * sd_profit / nrow(sample)^0.5
lowbound_COMP <- mean_COMP - z_alpha2 * ssd_COMP / nrow(sample)^0.5
highbound_COMP <- mean_COMP + z_alpha2 * ssd_COMP / nrow(sample)^0.5
H0_profit <- ifelse(highbound_profit < 0, "Do not reject H0", "Reject H0")
H0_COMP <- ifelse(lowbound_COMP > 6, "Do not reject H0", "Reject H0")
cat("The lower bound of the CI for profit is", round(lowbound_profit, 4), "and the higher bound is", round(highbound_profit, 4), "\nThe lower bound of the CI for competitors is", round(lowbound_COMP, 4), "and the higher bound is", round(highbound_COMP, 4))
cat("\n\nPROFIT:\n", H0_profit, "\n\nCOMPETITORS:\n", H0_COMP)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DCOSTS - 0.5) / ((mean_DCOSTS * (1 - mean_DCOSTS)/nrow(sample))^0.5)
pval_DNEWHIRES <- pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS < alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES > alpha / 2), "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020)",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES)
mean_AGE <- mean(sample$AGE)
sd_AGE <- sd(sample$AGE)
z_AGE <- qnorm(1-alpha)
TestStat_AGE <- (mean_AGE - 11)/(sd_AGE / nrow(sample)^0.5)
H0_AGE <- ifelse(z_AGE > TestStat_AGE, "Do not reject H0", "Reject H0")
cat("Age:",
"The critical value is", z_AGE,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_AGE,
"\nThe statistical conclusion is:", H0_AGE,
"\n\n")
z_EMP <- qnorm(alpha)
TestStat_EMP <- (mean_EMP - 11)/(ssd_EMP / nrow(sample)^0.5)
H0_EMP <- ifelse(z_EMP < TestStat_EMP, "Do not reject H0", "Reject H0")
cat("Employment:",
"\nThe critical value is", z_EMP,
"\nThe rejection region is to the right side of the critical value.",
"\nThe value of the test statistic is", TestStat_EMP,
"\nThe statistical conclusion is:", H0_EMP)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((0.7 * (1 - 0.7)/nrow(sample))^0.5)
pval_DCOSTS <- ifelse(TestStat_DCOSTS > 0, pnorm(-TestStat_DCOSTS, 0, 1), pnorm(TestStat_DCOSTS, 0, 1))
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DNEWHIRES - 0.5) / ((0.5 * (1 - 0.5)/nrow(sample))^0.5)
pval_DNEWHIRES <- 2 * pnorm(-TestStat_DNEWHIRES, 0, 1)
H0_DCOSTS <- ifelse(pval_DCOSTS > alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES > alpha), "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020)",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((0.7 * (1 - 0.7)/nrow(sample))^0.5)
pval_DCOSTS <- ifelse(TestStat_DCOSTS > 0, pnorm(-TestStat_DCOSTS, 0, 1), pnorm(TestStat_DCOSTS, 0, 1))
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DNEWHIRES - 0.5) / ((0.5 * (1 - 0.5)/nrow(sample))^0.5)
pval_DNEWHIRES <- 2 * ifelse(TestStat_DNEWHIRES >0, pnorm(TestStat_DNEWHIRES, 0, 1, lower.tail = FALSE), pnorm(TestStat_DNEWHIRES, 0, 1, lower.tail = TRUE))
H0_DCOSTS <- ifelse(pval_DCOSTS > alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES > alpha), "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020)",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES)
mean_DCOSTS <- mean(sample$DCOSTS)
TestStat_DCOSTS <- (mean_DCOSTS - 0.7) / ((0.7 * (1 - 0.7)/nrow(sample))^0.5)
pval_DCOSTS <- pnorm(-TestStat_DCOSTS, 0, 1)
mean_DNEWHIRES <- mean(sample$DNEWHIRES)
TestStat_DNEWHIRES <- (mean_DNEWHIRES - 0.5) / ((0.5 * (1 - 0.5)/nrow(sample))^0.5)
pval_DNEWHIRES <- 2 * ifelse(TestStat_DNEWHIRES >0, pnorm(TestStat_DNEWHIRES, 0, 1, lower.tail = FALSE), pnorm(TestStat_DNEWHIRES, 0, 1, lower.tail = TRUE))
H0_DCOSTS <- ifelse(pval_DCOSTS > alpha, "Do not reject H0", "Reject H0")
H0_DNEWHIRES <- ifelse((pval_DNEWHIRES > alpha), "Do not reject H0", "Reject H0")
cat("DCOSTS (Companies that reduced fixed costs in 2020)",
"\nTest statistic:", TestStat_DCOSTS,
"\np-value:", pval_DCOSTS,
"\nStatistical conclusion:", H0_DCOSTS,
"\n\nDNEWHIRES (Companies that hired employees in 2020)",
"\nTest statistic:", TestStat_DNEWHIRES,
"\np-value:", pval_DNEWHIRES,
"\nStatistical conclusion:", H0_DNEWHIRES)
