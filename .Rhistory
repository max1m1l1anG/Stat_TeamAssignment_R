sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2,
prop = sum((sample > lowbound) & (sample < highbound)) / nrows(sample))
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2,
prop = sum((sample > lowbound) & (sample < highbound)) / nrow(sample))
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2) %>%
mutate(prop = sum((sample > lowbound) & (sample < highbound)) / nrow(sample))
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2) %>%
mutate(prop = sum((sample$PROFIT > lowbound) & (sample$PROFIT < highbound)) / nrow(sample))
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2,
prop)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2,
prop = )
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2,
prop = )
for (i in c(1, 2, 3, 4)){
prop
}
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2,
prop = )
for (i in c(1, 2, 3, 4)){
}
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
print(sum(sample$PROFIT > q6$lowbound[i]))
print(sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])))
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in c(1, 2, 3, 4)){
print(sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])))
}
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in c(1, 2, 3, 4)){
print(sum((sample$PROFIT > q6$lowbound[i])))
}
#
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in c(1, 2, 3, 4)){
print(sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])))
}
#
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in c(1, 2, 3, 4)){
print(sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])) / nrow(sample))
}
#
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in c(1, 2, 3, 4)){
q6$prop[i] <- sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])) / nrow(sample)
}
#
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in c(1, 2, 3, 4)){
q6$prop[i] <- sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])) / nrow(sample)
}
q6
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in 1:4){
q6$prop[i] <- sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])) / nrow(sample)
}
q6
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
lowest_z
highest_z
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
print(paste("The lowest z-score is", lowest_z, "\nThe highest z-score is", highest_z, "\n It is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ", "\n It is", abs(highest_z) > 3, "that the lowest z-score is an outlier value."))
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
print(paste("The lowest z-score is", lowest_z, " \nThe highest z-score is", highest_z, "\n It is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ", "\n It is", abs(highest_z) > 3, "that the lowest z-score is an outlier value."))
print("hello \n hello")
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat(paste("The lowest z-score is", lowest_z, "\nThe highest z-score is", highest_z, "\n It is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ", "\n It is", abs(highest_z) > 3, "that the lowest z-score is an outlier value."))
cat(paste("The lowest z-score is", lowest_z, "\nThe highest z-score is", highest_z, "\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ", "\nIt is", abs(highest_z) > 3, "that the lowest z-score is an outlier value."))
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat(paste("The lowest z-score is", lowest_z, "\nThe highest z-score is", highest_z, "\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ", "\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value."))
library(readxl)
library(dplyr)
library(tidyverse)
sample <- read_excel("Sample3.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "skip"))
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
print(paste("\nThe median is", median_EMP))
print(paste("\nThe mean is", mean_EMP))
print(paste("\nThe sample variance is", svar_EMP))
print(paste("\nThe (manual) sample variance is", manual_svar))
print(paste("\nThe sample standard deviation is", ssd_EMP))
print(paste("\nThe (manual) sample standard deviation is", manual_svar^0.5))
cat(paste("\nThe median is", median_EMP,
"\nThe mean is", mean_EMP,
"\nThe sample variance is", svar_EMP,
"\nThe (manual) sample variance is", manual_svar,
"\nThe sample standard deviation is", ssd_EMP,
"\nThe (manual) sample standard deviation is", manual_svar^0.5))
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
cat(paste("\nThe median is", median_EMP,
"\nThe mean is", mean_EMP,
"\nThe sample variance is", svar_EMP,
"\nThe (manual) sample variance is", manual_svar,
"\nThe sample standard deviation is", ssd_EMP,
"\nThe (manual) sample standard deviation is", manual_svar^0.5))
median_growth <- median(sample$GROWTH)
mode <- function(x){which.max(tabulate(x))}
mode_growth <- mode(sample$GROWTH)
print(paste("The median is", median_growth))
print(paste("The mode is", mode_growth))
cat(paste("The median is", median_growth, "\nThe mode is", mode_growth))
median_growth <- median(sample$GROWTH)
mode <- function(x){which.max(tabulate(x))}
mode_growth <- mode(sample$GROWTH)
cat(paste("The median is", median_growth, "\nThe mode is", mode_growth))
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
cat(paste("The median is", median_EMP,
"\nThe mean is", mean_EMP,
"\nThe sample variance is", svar_EMP,
"\nThe (manual) sample variance is", manual_svar,
"\nThe sample standard deviation is", ssd_EMP,
"\nThe (manual) sample standard deviation is", manual_svar^0.5))
relfreq_SECTOR <- table(sample$SECTOR) / length(sample$SECTOR)
index_relfreq <- 1
for (type in c("Technology", "Finance", "Healthcare", "Other")) {
print(paste("The relative frequency of", type, "is", round(relfreq_SECTOR[index_relfreq], 4)))
index_relfreq <- index_relfreq +1
}
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
cat(paste("The median is", round(median_EMP, 4),
"\nThe mean is", round(mean_EMP, 4),
"\nThe sample variance is", round(svar_EMP, 4),
"\nThe (manual) sample variance is", round(manual_svar, 4),
"\nThe sample standard deviation is", round(ssd_EMP, 4),
"\nThe (manual) sample standard deviation is", round(manual_svar^0.5, 4)))
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
cat(paste("The median is", round(median_EMP, 4),
"\nThe mean is", round(mean_EMP, 4),
"\nThe sample variance is", round(svar_EMP, 4),
"\nThe (manual) sample variance is", round(manual_svar, 4),
"\nThe sample standard deviation is", round(ssd_EMP, 4),
"\nThe (manual) sample standard deviation is", round(manual_svar^0.5,4))
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
cat(paste("The median is", round(median_EMP, 4),
"\nThe mean is", round(mean_EMP, 4),
"\nThe sample variance is", round(svar_EMP, 4),
"\nThe (manual) sample variance is", round(manual_svar, 4),
"\nThe sample standard deviation is", round(ssd_EMP, 4),
"\nThe (manual) sample standard deviation is", round(manual_svar^0.5,4)))
cat(paste("The sample mean of COMPETITORS is", mean_COMP,
"The sample standard deviation of COMPETITORS is", ssd_COM,
"The sample proportion of companies that have less than 5 competitors is", prop_less5))
mean_COMP <- mean(sample$COMPETITORS)
ssd_COM <- mean(sample$COMPETITORS)
prop_less5 <- sum(sample$COMPETITORS < 5) / length(sample$COMPETITORS)
print(paste("The sample mean of COMPETITORS is", mean_COMP))
print(paste("The sample standard deviation of COMPETITORS is", ssd_COM))
print(paste("The sample proportion of companies that have less than 5 competitors is", prop_less5))
cat(paste("The sample mean of COMPETITORS is", mean_COMP,
"\nThe sample standard deviation of COMPETITORS is", ssd_COM,
"\nThe sample proportion of companies that have less than 5 competitors is", prop_less5))
mean_COMP <- mean(sample$COMPETITORS)
ssd_COM <- mean(sample$COMPETITORS)
prop_less5 <- sum(sample$COMPETITORS < 5) / length(sample$COMPETITORS)
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COM, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COM, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 5)))
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COM, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
mean_COMP <- mean(sample$COMPETITORS)
ssd_COM <- mean(sample$COMPETITORS)
prop_less5 <- sum(sample$COMPETITORS < 5) / length(sample$COMPETITORS)
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COM, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COM, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 5)))
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COM, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
z_alpha2 <- qnorm((1-alpha) / 2)
z_alpha2 <- qnorm(((1-alpha) / 2))
library(readxl)
library(dplyr)
library(tidyverse)
sample <- read_excel("Sample3.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "skip"))
alpha = 0.07
z_alpha2 <- qnorm(((1-alpha) / 2))
lowbound_profit <- mean_profit - z_alpha2 * sd_profit
highbound_profit <- mean_profit + z_alpha2 * sd_profit
z_alpha2
z_alpha2 <- qnorm(1 - alpha/ 2)
lowbound_profit <- mean_profit - z_alpha2 * sd_profit
highbound_profit <- mean_profit + z_alpha2 * sd_profit
z_alpha2
mean_COMP <- mean(sample$COMPETITORS)
ssd_COMP <- mean(sample$COMPETITORS)
prop_less5 <- sum(sample$COMPETITORS < 5) / length(sample$COMPETITORS)
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COM, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
mean_COMP <- mean(sample$COMPETITORS)
ssd_COMP <- mean(sample$COMPETITORS)
prop_less5 <- sum(sample$COMPETITORS < 5) / length(sample$COMPETITORS)
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COMP, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
z_alpha2 <- qnorm(1 - alpha/ 2)
lowbound_profit <- mean_profit - z_alpha2 * sd_profit
highbound_profit <- mean_profit + z_alpha2 * sd_profit
lowbound_COMP <- mean_COMP - z_alpha2 * ssd_COMP
lowbound_COMP <- mean_COMP + z_alpha2 * ssd_COMP
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat("The lowest z-score is", lowest_z,
"\nThe highest z-score is", highest_z,
"\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ",
"\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value.")
z_alpha2 <- qnorm(1 - alpha/ 2)
lowbound_profit <- mean_profit - z_alpha2 * sd_profit
highbound_profit <- mean_profit + z_alpha2 * sd_profit
lowbound_COMP <- mean_COMP - z_alpha2 * ssd_COMP
highbound_COMP <- mean_COMP + z_alpha2 * ssd_COMP
cat("The lower bound of the CI for profit is", lowbound_profit, "and the higher bound is", highbound_profit, "\nThe lower bound of the CI for competitors is", lowbound_COMP, "and the higher bound is", highbound_COMP)
z_alpha2 <- qnorm(1 - alpha/ 2)
lowbound_profit <- mean_profit - z_alpha2 * sd_profit / nrow(sample)^0.5
highbound_profit <- mean_profit + z_alpha2 * sd_profit / nrow(sample)^0.5
lowbound_COMP <- mean_COMP - z_alpha2 * ssd_COMP / nrow(sample)^0.5
highbound_COMP <- mean_COMP + z_alpha2 * ssd_COMP / nrow(sample)^0.5
cat("The lower bound of the CI for profit is", lowbound_profit, "and the higher bound is", highbound_profit, "\nThe lower bound of the CI for competitors is", lowbound_COMP, "and the higher bound is", highbound_COMP)
z_alpha2 <- qnorm(1 - alpha/ 2)
lowbound_profit <- mean_profit - z_alpha2 * sd_profit / nrow(sample)^0.5
highbound_profit <- mean_profit + z_alpha2 * sd_profit / nrow(sample)^0.5
lowbound_COMP <- mean_COMP - z_alpha2 * ssd_COMP / nrow(sample)^0.5
highbound_COMP <- mean_COMP + z_alpha2 * ssd_COMP / nrow(sample)^0.5
cat("The lower bound of the CI for profit is", round(lowbound_profit, 4), "and the higher bound is", round(highbound_profit, 4), "\nThe lower bound of the CI for competitors is", round(lowbound_COMP, 4), "and the higher bound is", round(highbound_COMP, 4))
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat("The lowest z-score is", lowest_z,
"\nThe highest z-score is", highest_z,
"\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ",
"\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value.")
iqr_profit <- IQR(sample$PROFIT)
quantile(sample$PROFIT)
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat("The lowest z-score is", lowest_z,
"\nThe highest z-score is", highest_z,
"\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ",
"\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value.", "\n")
iqr_profit <- IQR(sample$PROFIT)
quantile(sample$PROFIT)
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat("The lowest z-score is", lowest_z,
"\nThe highest z-score is", highest_z,
"\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ",
"\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value.", "\n")
iqr_profit <- IQR(sample$PROFIT)
quantile(sample$PROFIT, 0.75)
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat("The lowest z-score is", lowest_z,
"\nThe highest z-score is", highest_z,
"\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ",
"\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value.")
iqr_profit <- IQR(sample$PROFIT)
Q1_profit <- quantile(sample$PROFIT, 0.25)
Q3_profit <- quantile(sample$PROFIT, .75)
number_outliers_profit <- sum(sample$PROFIT < Q1_profit-1.5*iqr_profit) + sum(sample$PROFIT > Q3_profit+1.5*iqr_profit)
cat("The number of outliers are", number_outliers_profit)
library(readxl)
library(dplyr)
library(tidyverse)
sample <- read_excel("Sample3.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"skip", "skip", "skip"))
alpha = 0.07
median_EMP <- median(sample$EMPLOYEE)
mean_EMP <- mean(sample$EMPLOYEE)
svar_EMP <- var(sample$EMPLOYEE)
ssd_EMP <- sd(sample$EMPLOYEE)
# Calculating the sample variance "by hand"
variance_sample <- sample %>%
mutate(dev_squared = (EMPLOYEE - mean_EMP)^2)
manual_svar <- sum(variance_sample$dev_squared) / (nrow(variance_sample) - 1)
cat(paste("The median is", round(median_EMP, 4),
"\nThe mean is", round(mean_EMP, 4),
"\nThe sample variance is", round(svar_EMP, 4),
"\nThe (manual) sample variance is", round(manual_svar, 4),
"\nThe sample standard deviation is", round(ssd_EMP, 4),
"\nThe (manual) sample standard deviation is", round(manual_svar^0.5,4)))
median_growth <- median(sample$GROWTH)
mode <- function(x){which.max(tabulate(x))}
mode_growth <- mode(sample$GROWTH)
cat(paste("The median is", median_growth, "\nThe mode is", mode_growth))
relfreq_SECTOR <- table(sample$SECTOR) / length(sample$SECTOR)
index_relfreq <- 1
for (type in c("Technology", "Finance", "Healthcare", "Other")) {
print(paste("The relative frequency of", type, "is", round(relfreq_SECTOR[index_relfreq], 4)))
index_relfreq <- index_relfreq +1
}
mean_COMP <- mean(sample$COMPETITORS)
ssd_COMP <- mean(sample$COMPETITORS)
prop_less5 <- sum(sample$COMPETITORS < 5) / length(sample$COMPETITORS)
cat(paste("The sample mean of COMPETITORS is", round(mean_COMP, 4),
"\nThe sample standard deviation of COMPETITORS is", round(ssd_COMP, 4),
"\nThe sample proportion of companies that have less than 5 competitors is", round(prop_less5, 4)))
mean_profit <- mean(sample$PROFIT)
sd_profit <- sd(sample$PROFIT)
sd_multiples <- c(1.25, 1.5, 1.75, 2)
q6 <- data.frame(sd_multiples) %>%
mutate(lowbound = mean_profit - sd_profit * sd_multiples,
highbound = mean_profit + sd_profit * sd_multiples,
minCheb = 1 - 1 / sd_multiples^2)
for (i in 1:4){
q6$prop[i] <- sum((sample$PROFIT > q6$lowbound[i]) & (sample$PROFIT < q6$highbound[i])) / nrow(sample)
}
q6
findz_PROFIT <- function(x){
(x - mean_profit) / sd_profit
}
lowest_z <- findz_PROFIT(min(sample$PROFIT))
highest_z <- findz_PROFIT(max(sample$PROFIT))
cat("The lowest z-score is", lowest_z,
"\nThe highest z-score is", highest_z,
"\nIt is", abs(lowest_z) > 3, "that the lowest z-score is an outlier value. ",
"\nIt is", abs(highest_z) > 3, "that the highest z-score is an outlier value.")
iqr_profit <- IQR(sample$PROFIT)
Q1_profit <- quantile(sample$PROFIT, 0.25)
Q3_profit <- quantile(sample$PROFIT, .75)
number_outliers_profit <- sum(sample$PROFIT < Q1_profit-1.5*iqr_profit) + sum(sample$PROFIT > Q3_profit+1.5*iqr_profit)
cat("The number of outliers is", number_outliers_profit)
z_alpha2 <- qnorm(1 - alpha/ 2)
lowbound_profit <- mean_profit - z_alpha2 * sd_profit / nrow(sample)^0.5
highbound_profit <- mean_profit + z_alpha2 * sd_profit / nrow(sample)^0.5
lowbound_COMP <- mean_COMP - z_alpha2 * ssd_COMP / nrow(sample)^0.5
highbound_COMP <- mean_COMP + z_alpha2 * ssd_COMP / nrow(sample)^0.5
cat("The lower bound of the CI for profit is", round(lowbound_profit, 4), "and the higher bound is", round(highbound_profit, 4), "\nThe lower bound of the CI for competitors is", round(lowbound_COMP, 4), "and the higher bound is", round(highbound_COMP, 4))
mean_dcosts <- mean(sample$DCOSTS)
mean_DCOSTS <- mean(sample$DCOSTS)
mean_DCOSTS <- mean(sample$DCOSTS)
